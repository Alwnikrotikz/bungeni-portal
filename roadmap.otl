Bungeni Roadmap
	What is this?
	: This is a "view from 10,000 feet". More detailed documents will be
	: referenced from this one as they become available.
	Format
		This document is maintained using [http://www.vimoutliner.org/ VimOutliner]
Systems involved
	: This section lists all the systems used in Bungeni. They may themselves
	: be complex (have subsystems).
	Plone
		: These are all the Plone Products that together make up the Bungeni
		: portal.
		Bungeni
		Marginalia
		BungeniSkin
			BungeniSkinXX
		AuditTrail
		Public Website
	OOo
		Editing of Hansard and Bills
	Registry
		: Uses MySQL or other RDBMS
		Audit log consumer
	NormaAfrica
		URI resolver
	eXist
		XML database
Communication between systems
	Plone -> OOo
		OOo reads RSS2 feeds from Plone
			annotations 
			questions
			motions
			tabled documents
			calendar events
	OOo -> Plone
		OOo posts documents (Hansard, Bills) to Plone via WebDAV
	Registry
		Plone writes audit log
		Registry feeder reads audit log
		OOo reads from registry to populate various dropdowns, etc.
	Plone -> NormaAfrica/resolver
		Plone asks for URIs
			Each legal document (e.g. Bill) gets an unchanging URI
			This is supplied by a naming service
		Plone sends AkomaNtosoXML documents 
		Plone queries documents AkomaNtosoXML documents
	OOo (Plone?) -> eXist
		Stores XML documents in eXist
		Does XQuery, XPath queries against eXist
	Plone -> Calendaring applications
		Bungeni publishes calendar feeds as ical
Dependencies between systems
	: If one system is down, the functioning of the other is impaired or
	: prevented.
	OOo -> Plone
		OOo needs to retrieve RSS2 feeds from Plone
		OOo needs to push Hansard & other docs to Plone for browsing
	OOo -> registry
		OOo uses the registry to populate various choices
			any chance of querying Plone directly?
	Plone -> eXist (?)
		Doing arbitrary XPath/XQuery queries against AkomaNtosoXML documents
	Registry -> Audit log
		The audit log needs to be kept up to date for the registry to reflect Plone
Research to do
	eXist integration
		eXist use cases: what queries do we need that Plone can't do
	XML in Silva
		: We should do as much as we can within Plone, even if eXist is used
		: as a repository for XML documents. Ideally, the Bungeni portal
		: should be able to work without depending on any external systems.
		: I'd like to find out what XML-handling capacity Silva has, and
		: whether we can use it.
		How is XML handled in Silva? Transformations? Can we use it in Bungeni?
		Related to eXist integration.
	Transformation of incoming AkomaNtosoXML to PHC subclasses
	Can Marginalia use [http://kukit.org/ KSS]?
		Yes
			The creation of annotations, both temporary and permanent
			The creation of the HTML snippets for editing
		No
			The range-finding code
		What does it entail?
			Custom annotation template
			We ignore a lot of marginalia js, mainly use the range-calculating
		All KSS functionality is Plone-specific
			Actually other systems could also use KSS, but none do for now
			How easy is it for other systems to use KSS?
	Impact of migrating to Plone 3
	ZSQLCatalog 
		: can be viewed as a kind of Relational Online Analytical Processing
		: (ROLAP) component for object databases, and it provides a nice
		: interface for extracting reports from the object database into
		: OpenOffice or Microsoft Excel spreadsheets.
		Alternative to registry for querying
		Different use case
			: ZSQLCatalog is for searching, but not for time travel (doesn't
			: store past relationships)
	Public participation
		Can anyone join? Any citizen?
			: We should talk through scenarios and their implications for
			: scaling and vulnerability. If we allow anyone to sign up, how do
			: we prevent one person from creating an army of users? If we
			: require an ID number (if there is one) how do we prevent
			: identity theft?
			Levels of participation
				Informal
					We don't really care about identity, we'd just like to get an idea
				Formal
					Voting 
						It's really important that someone is who they say they are
			Single sign-on considerations
				For public access, we could potentially integrate with existing directories
					Some countries already have databases of citizens
				If we're building a directory, other applications could use it
					Integrate an [http://openid.net/ OpenID] server?
						: Members of the public may already have an OpenID
						: identity. Let them use this? Or provide an OpenID
						: interface to our directory, for other applications
						: to use?
		Commenting/annotation
			Spam protection
				[http://akismet.com/ Akismet] integration
		Voting/surveying
			Cellphones: ask a question of a constituency, get immediate answers per SMS
	Use of ontology
		: Given that we have a multilingual ontology, what use will be made of
		: it in the portal? Will it be used to provide alternative navigation
		: structures? How should it be shown during browsing of documents? I
		: don't think we can answer these yet, we need more content to play
		: with.
		Interrelation of content
		Alternative navigation structure
	Security
		Define the kind of security Bungeni should offer
		Access control
		Tamper-resistant data ([http://www.wayner.org/books/td/ translucent data])
	Future
		GIS integration (the Dutch guys)
Overarching tasks
	Testing
		Writing unit tests
		Writing functional tests
			[http://plone.org/documentation/tutorial/testing/functional-tests testbrowser]
			[http://ingeniweb.sourceforge.net/Products/PloneSelenium/ selenium]
		Load testing
	Deployment
		Release process (tagging, bundling, installing)
			Possible outputs
				VMWare appliance, or similar *virtual* "Bungeni-in-a-box"
				Real "Bungeni-in-a-box" (pre-installed server)
				Hosted Bungeni (web app)
					: Hosted is ideal, takes a lot of technical support work
					: out of the picture.
				Intranet Bungeni (a machine on the parliament's intranet)
					: Intranet instances would be required out of data
					: security/ownership concerns, but can hurt this as much
					: as help. We should explore specifying a secure hosting
					: offering that would be acceptable to parliaments. E.g.
					: offsite backups go to parliamentary servers, but the
					: running system is maintained by the hosting provider.
		Bungeni federation/standardisation
			: "federation": setting up one Bungeni instance to look at others;
			: e.g. in a local/national government type deployment.
			: "standardisation": Bungeni can be customised, but this should
			: not be allowed to jeopardise interoperability, so we should
			: specify what's allowed.
			Do Bungeni instances exchange information?
				e.g. one Bungeni instance may be interested in events created on a different one
			What may be customised?
				Yes: skins.
				No: AkomaNtosoXML (may be extended, but according to spec).
				: If workflow/permissions is customised too much, training and
				: public access, mashups, 3rdparty systems become problematic.
		System administration
			What is needed to keep a Bungeni implementation running?
	Documentation & training
		Creation of personas, writing use cases as stories featuring personas
		Document the use of member/role/group/team/workspace in Bungeni
		Write scenarios of how Bungeni can fit into the day-to-day at parliament
			: Who enters data, on which computers, how is info looked up, is
			: it selected, formatted & printed as handouts/notes in
			: parliament, what about MPs who don't know computers, ...
		Screencasts
			Scripting
			Recording
			Editing
			Play through abovementioned use cases
		Training courses
			For MP
			For clerical staff
				Editing
				Administrative
			For legal drafters
Development tasks per system
	: Many of these need BIPs
	Bungeni
		: Areas that need attention, need fleshing out
		Workflow/security
			Default
			Question/motion
			Bills
				How closely do we model the parliamentary process?
					: I.e. is our workflow document-management-oriented, or is
					: it strictly parliamentary? Document-management-oriented
					: workflow may only reflect changes in the content or
					: accessibility of a document. Parliamentary workflow may
					: additionally reflect changes in the formal status of a
					: document. In the first case, we just look at the
					: requirements of the portal (who needs to see the
					: document, what needs to be done to it). In the second
					: case, we also look at the parliamentary processes, that
					: may include more steps and shades of meaning than we
					: implement in the portal.
				Who takes a bill through this process?
					: Say a document has been scheduled for some day, but has
					: not been debated. Someone needs to signal this to the
					: system. Similarly other formal status changes may need
					: to be signalled. Someone needs to go and select some
					: documents and move them to their new state. Which group
					: does this, what is its members?
		Translation, LinguaPlone
		Presentation, browsing, searching of parliamentary docs
		Calendaring
			How do events get scheduled
			What is the workflow for bumped events?
		Templating
			How far can we use auto-generated archetypes forms?
				: The current forms are auto-generated. If we want them to
				: look a very different, we'll have to hand-craft  new forms,
				: or tune the underlying base_... forms.
			Customise base_edit to incorporate some metadata fields?
				: Most of the metadata  fields are on the "properties" tab,
				: not the "edit" tab.  If we want them to see more use, they
				: could be moved to the "edit" tab.
		Integration of PloneOntology
			Who manages the ontology?
	Marginalia
		Make it solid across browsers
		Extend keyword concept 
			per document type
			variant forms
				choose one which becomes (part of) the annotation text (current) 
				choose a *type of* annotation (insert/delete/substitute)
				reference Plone documents from an annotation
					: E.g. the annotation could be a short note referencing a
					: more substantial formatted document.
					Implications for RSS2 feed of annotations? 
						RDF pointer at the document as an external resource?
		Adapt document (Bills, etc) to IAnnotatable, instead of subclassing AnnotatableDocument
			cf. audio files in Plone4Artists project
		Make sure that all kinds of annotation works (overlapping, nested, etc.)
		Extend browsing of annotations (per user, per paragraph, see stet)
		Different roles can see only own annotations/various users' annotations
		Store annotations per-document, rather than in tool?
			Think through pros & cons
		Presentation of annotation
			show more of source document context
			Each annotation can become root of a discussion thread
		From annotations to amendments
			Order annotations for discussion (most radical first)
			Take annotations from lightweight marginalia to more formal OOo amendments
				Amendment is a different content type from annotation
	BungeniSkin
		BungeniSkinXX
			Convert from qPloneSkinDump to ArchGenXML-based skins
	AuditTrail
		Check file locking
			Can't read while writing
			Can't rotate file while writing
		Formulate protocol for offsite backup
		Formulate protocol for registry logfile consumption
	Public Website
		: Currently, this is just a publically-browsable content hierarchy in
		: Bungeni. In practice, this may be rooted in e.g. /public/ in Plone
		: and published to a remote server using deliverance or one of the
		: deployment products.
