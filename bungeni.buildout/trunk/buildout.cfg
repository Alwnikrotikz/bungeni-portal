[buildout]
extends = platform.cfg
          http://download.zope.org/zope3.4/versions.cfg
versions = versions

develop = 
      src/alchemist.ui
      src/alchemist.catalyst
      src/alchemist.traversal
      src/bungeni.server
      src/bungeni.core
      src/bungeni.ui
      src/bungeni.theme.private
      src/marginalia
      src/ore.alchemist
      src/ploned.ui
;      src/ore.library
      src/ore.yuiwidget
      src/z3c.schemadiff

; specify development eggs as by their python path so we can include
; them in other parts
core_eggs =
      alchemist.ui
      alchemist.catalyst
      alchemist.traversal
      bungeni.server
      bungeni.core
      bungeni.ui
      bungeni.theme.private
      marginalia
      ore.alchemist
      ore.yui
      ore.yuiwidget
;      ore.library
      ploned.ui
      z3c.schemadiff

eggs =
      simplejson
      ore.workflow
      ore.xapian
      ore.svn
      wc.cookiecredentials
      xappy
      python-memcached
      zc.configuration
      zc.displayname
      zc.resourcelibrary
      zc.table
      tl.eggdeps
      z3c.menu.ready2go

parts = 
      ${buildout:platform_parts}
      app 
      test 
      ipython       
      i18n
      
find-links = 
    http://kapil.objectrealms.net/dist/

index = http://pypi.python.org/simple

;; we can tell buildout to use a cache, which is useful if we want to ship buildout as a tarball
download-cache = data/downloads
download-directory = data/downloads

newest = false

[versions]
SQLAlchemy = 0.4.4
zope.publisher = 3.5.1
setuptools = 0.6c8
lovely.recipe = 0.3.1b8
zope.app.locales = 3.4.5

[app]
# python interpreter w/ app eggs for all entry points found in these eggs
recipe = zc.recipe.egg
eggs = 
       ${buildout:eggs}
       ${buildout:core_eggs}
       zope.app.apidoc
       zope.viewlet
       zope.formlib
       zope.app.securitypolicy
       z3c.evalexception>=2.0
       Paste
       PasteScript
       PasteDeploy
       tl.eggdeps
       psycopg2
       PdbTextMateSupport
       rlcompleter2
extra-paths = 
  ${xapian:location}/lib/python
;  ${subversion:location}/lib/python
interpreter = python

[ipython]
# ipython shell w/ app eggs
recipe = zc.recipe.egg
eggs =
   ipython
   ${buildout:eggs}
   ${buildout:core_eggs}
extra-paths = 
  ${xapian:location}/lib/python
;  ${subversion:location}/lib/python
scripts = ipython

[test]
# test runner 
recipe = zc.recipe.testrunner
eggs = ${buildout:core_eggs}
       ${buildout:eggs}  
       psycopg2

extra-paths = 
  ${xapian:location}/lib/python
;  ${subversion:location}/lib/python

defaults = ['--tests-pattern', '^f?tests$', '-v']

[i18n]
recipe = lovely.recipe:i18n
eggs = ${app:eggs}
package = bungeni.core
domain = bungeni
output = locales
location = src/bungeni.core
extra-paths = 
  ${xapian:location}/lib/python
;  ${subversion:location}/lib/python   
zcml = 
    <include package="zc.configuration" file="meta.zcml" />
    <include package="bungeni.server"/>
    <include package="ore.alchemist" file="meta.zcml" />
    <include package="ore.alchemist"/>  
    <include package="alchemist.catalyst" file="meta.zcml" />
    <include package="alchemist.ui" />
    <include package="bungeni.core" />
