<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="Common" script:language="StarBasic">REM  *****  BASIC  *****
Option Explicit 

Sub Main

rem EmbedGraphic ThisComponent, &quot;file:///e:/default_logo.jpg&quot;

rem AddImageIntoSection &quot;prayers&quot;, &quot;e:\default_logo.jpg&quot; 

rem InsertDocumentIntoSection &quot;prayers&quot;, &quot;e:\import.odt&quot;


rem	AddTextToSection &quot;prayers&quot;, &quot;some text&quot;, &quot;Heading 1&quot;
rem	AddTextToSection &quot;prayers&quot;, &quot;&lt;parabreak&gt;&quot;, &quot;Heading 1&quot;
rem	AddTextToSection &quot;prayers&quot;, &quot;some text 2&quot;, &quot;Heading 2&quot;
rem	AddTextToSection &quot;prayers&quot;, &quot;&lt;parabreak&gt;&quot;, &quot;Heading 2&quot;
	rem SetInputFieldValue &quot;test_field&quot;, &quot;new value&quot;
	rem SetDocumentProperty &quot;bungeni_document_type&quot;, &quot;debaterecord&quot;
	
rem Dim vCurs
rem vCurs = ThisComponent.CurrentController.getViewCursor()
rem Dim oTCurs
rem oTCurs = ThisComponent.getText().createTextCursorByRange(vCurs.getStart())
rem oTCurs.CharWeight = com.sun.star.awt.FontWeight.BOLD

rem ThisComponent.getText().InsertString(oTCurs, &quot;THIS IS SOME TEXT&quot;, FALSE)
	
rem	AddTextToSection &quot;question-1&quot;, &quot;Banditry Menace in Galole&quot;, &quot;agenda&quot;
rem	AddTextToSection &quot;question-1&quot;, &quot;&lt;parabreak&gt;&quot;, &quot;&quot;
rem	AddTextToSectionWithCharStyle &quot;question-1&quot;, &quot;Mr.Kofa&quot;, &quot;question&quot;, com.sun.star.awt.FontWeight.BOLD 
rem	AddTextToSection &quot;question-1&quot;, &quot; : Ministry of Tourism&quot;, &quot;question&quot;

rem SearchAndReplace &quot;Some Text&quot;, &quot;This Text&quot;
rem  AddSectionInsideSection &quot;Section1&quot;, &quot;Section2-Section1&quot;
rem InsertHTMLDocumentIntoSection &quot;Section1&quot;, &quot;e:\htmlFragment.html&quot;, &quot;Heading 1&quot;
rem dim oSect
rem oSect = ThisComponent.getTextSections().getByName(&quot;Section1&quot;)
 Dim ArrValues(1) as New com.sun.star.xml.AttributeData
 Dim ArrNames(1) as String
 ArrNames(0) = &quot;Attr1&quot;
 ArrNames(1) = &quot;Attr2&quot;

 With ArrValues(0)
    .Namespace = &quot;&quot;
    .Type = &quot;CDATA&quot;
    .Value = &quot;test1&quot;
 End With
  With ArrValues(1)
   .Namespace = &quot;&quot;
   .Type = &quot;CDATA&quot;
   .Value = &quot;test2&quot;
 End With
AddSectionInsideSectionWithAttributes &quot;Section1&quot;, &quot;Section21&quot;, ArrNames, ArrValues
  
  	
rem AddAttributesToContainer (oSect.UserDefinedAttributes, ArrNames(), ArrValues() )
End Sub

      
Sub Main2 
	rem AddTextToSection &quot;prayers&quot;, &quot;text&quot;, &quot;myStyle&quot;
	Dim strValue as string
	strValue = ThisComponent.DocumentInfo.getPropertyValue(&quot;MyPropertyName&quot;)
	Msgbox strValue
	
Dim vEnum
  Dim vVal
  Dim s1$, s2$
  Dim sFieldName$, sFieldValue$, sInstanceName$, sHint$, sContent$
  
  vEnum = thisComponent.getTextFields().createEnumeration()
  If Not IsNull(vEnum) Then
    Do While vEnum.hasMoreElements()
      vVal = vEnum.nextElement()
      If vVal.supportsService(&quot;com.sun.star.text.TextField.Input&quot;) Then
      		XRay vVal
      		Msgbox &quot;Hint = &quot;+ vVal.Hint
      		Msgbox &quot;Content = &quot; + vVal.Content
      end If
    Loop
  End if
   
End Sub

Function CursorInSection () as String
	Dim oVCurs
	CursorInSection = &quot;&quot;
  	oVCurs = ThisComponent.getCurrentController().getViewCursor()

  	If IsEmpty(oVCurs.TextSection) Then
   		&apos;cursor not in a section...
   		CursorInSection = &quot;&quot;
  	Else
  		Dim secObj 
  		secObj = oVCurs.TextSection
  		CursorInSection = secObj.Name
  End If	
  
End Function


Sub AddTextToSection (sectionName as String, strText as String, strStyle as String)
 Dim oSect
  Dim sName$
  Dim oVC
  Dim oText
  Dim oCols
  Dim s$
  sName = sectionName
  If ThisComponent.getTextSections().hasByName(sName) Then
  	  oSect = ThisComponent.getTextSections().getByName(sName)
       rem XRay oSect
  	    Dim sectionText , sectionCurs
    	sectionCurs = ThisComponent.getText().createTextCursor()
        sectionCurs.gotoRange(oSect.getAnchor(), false)
        Dim endRange, endCursor
        endRange = sectionCurs.getEnd()
      
        endCursor = endRange.getText().createTextCursorByRange(endRange.getStart())
        if (strText = &quot;&lt;parabreak&gt;&quot; ) then
 	       InsertParaBreak(endCursor)
        else
 	     	InsertString(endCursor, strText, strStyle)
      	end if
    	REM Insert a new paragraph and select it
    	rem sectionText.insertControlCharacter(sectionCurs, _
    	rem com.sun.star.text.ControlCharacter.LINE_BREAK, False)
    	rem   sectionText.insertString(sectionCurs, &quot;one more hello world&quot;, false)
      	rem sectionCurs.ParaStyleName = &quot;Heading 2&quot;
  End If
    
End Sub



Sub AddTextToSectionWithCharStyle (sectionName as String,  strText as String,  strStyle as String, charWeight as Single )
 Dim oSect
  Dim sName$
  Dim oVC
  Dim oText
  Dim oCols
  Dim s$
  sName = sectionName
  If ThisComponent.getTextSections().hasByName(sName) Then
  	  oSect = ThisComponent.getTextSections().getByName(sName)
       rem XRay oSect
  	    Dim sectionText , sectionCurs
    	sectionCurs = ThisComponent.getText().createTextCursor()
        sectionCurs.gotoRange(oSect.getAnchor(), false)
        Dim endRange, endCursor
        endRange = sectionCurs.getEnd()
      
        endCursor = endRange.getText().createTextCursorByRange(endRange.getStart())
  	    InsertWeightedString(endCursor, strText, strStyle, charWeight)
  	 	REM Insert a new paragraph and select it
    	rem sectionText.insertControlCharacter(sectionCurs, _
    	rem com.sun.star.text.ControlCharacter.LINE_BREAK, False)
    	rem   sectionText.insertString(sectionCurs, &quot;one more hello world&quot;, false)
      	rem sectionCurs.ParaStyleName = &quot;Heading 2&quot;
  End If
    
End Sub

Sub AddSectionInsideSectionWithAttributes ( innerSection as String, newSection as String, AttNames() as String, AttValues() as com.sun.star.xml.AttributeData)
 Dim oSect
  If ThisComponent.getTextSections().hasByName(innerSection) Then
  	  oSect = ThisComponent.getTextSections().getByName(innerSection)
       rem XRay oSect
  	    Dim sectionText , sectionCurs
    	sectionCurs = ThisComponent.getText().createTextCursor()
        sectionCurs.gotoRange(oSect.getAnchor(), false)
        Dim endRange, endCursor
        endRange = sectionCurs.getEnd()
      
        endCursor = endRange.getText().createTextCursorByRange(endRange.getStart())
        Dim newSect, oCols
        newSect = ThisComponent.createInstance(&quot;com.sun.star.text.TextSection&quot;)
   		newSect.setName(newSection)
   		REM Now, create the columns...
     	oCols = ThisComponent.createInstance(&quot;com.sun.star.text.TextColumns&quot;)
    	oCols.setColumnCount(1)
    	newSect.TextColumns = oCols
    	newSect.UserDefinedAttributes = AddAttributesToContainer (newSect.UserDefinedAttributes, AttNames(), AttValues() )
        endCursor.getText().insertTextContent( endCursor, newSect, false)
        
        Dim oPar
        oPar = ThisComponent.createInstance(&quot;com.sun.star.text.Paragraph&quot;) 
        
        endCursor.getText().insertTextContentAfter (oPar, newSect)
  End If


End Sub


Sub AddSectionInsideSection ( innerSection as String,  newSection as String )
  Dim oSect
  If ThisComponent.getTextSections().hasByName(innerSection) Then
  	  oSect = ThisComponent.getTextSections().getByName(innerSection)
       rem XRay oSect
  	    Dim sectionText , sectionCurs
    	sectionCurs = ThisComponent.getText().createTextCursor()
        sectionCurs.gotoRange(oSect.getAnchor(), false)
        Dim endRange, endCursor
        endRange = sectionCurs.getEnd()
      
        endCursor = endRange.getText().createTextCursorByRange(endRange.getStart())
        Dim newSect, oCols
        newSect = ThisComponent.createInstance(&quot;com.sun.star.text.TextSection&quot;)
   		newSect.setName(newSection)
   		REM Now, create the columns...
     	oCols = ThisComponent.createInstance(&quot;com.sun.star.text.TextColumns&quot;)
    	oCols.setColumnCount(1)
    	newSect.TextColumns = oCols
        endCursor.getText().insertTextContent( endCursor, newSect, false)
        
        Dim oPar
        oPar = ThisComponent.createInstance(&quot;com.sun.star.text.Paragraph&quot;) 
        
        endCursor.getText().insertTextContentAfter (oPar, newSect)
  End If

End Sub

Sub InsertHTMLDocumentIntoSection(sName$, sFileUrl$ , sStyleApply$)
 sFileUrl = ConvertToURL(sFileUrl)
   rem now iterate through the section 
  Dim oSect
  If ThisComponent.getTextSections().hasByName(sName) Then
  	  oSect = ThisComponent.getTextSections().getByName(sName)
       rem XRay oSect
  	    Dim sectionText , sectionCurs
    	sectionCurs = ThisComponent.getText().createTextCursor()
        sectionCurs.gotoRange(oSect.getAnchor(), false)
        Dim endRange, endCursor
        endRange = sectionCurs.getEnd()
      
        endCursor = endRange.getText().createTextCursorByRange(endRange.getStart())
        
        Dim loadingProperty()
        loadingProperty = Array(MakePropertyValue(&quot;FilterName&quot;, &quot;HTML (StarWriter)&quot;))
        endCursor.insertDocumentFromURL(sFileURL, loadingProperty)
        if (Len(sStyleApply) &lt;&gt;  0 ) then 
        	endCursor.ParaStyleName = sStyleApply
        End If
  End If
 

End Sub

Sub InsertDocumentIntoSection(sName$, sFileUrl$)
  
   sFileUrl = ConvertToURL(sFileUrl)
   rem now iterate through the section 
  Dim oSect
  If ThisComponent.getTextSections().hasByName(sName) Then
  	  oSect = ThisComponent.getTextSections().getByName(sName)
       rem XRay oSect
  	    Dim sectionText , sectionCurs
    	sectionCurs = ThisComponent.getText().createTextCursor()
        sectionCurs.gotoRange(oSect.getAnchor(), false)
        Dim endRange, endCursor
        endRange = sectionCurs.getEnd()
      
        endCursor = endRange.getText().createTextCursorByRange(endRange.getStart())
        endCursor.insertDocumentFromURL(sFileURL, Array())
  End If
 
End Sub

Sub SetInputFieldValue (hintName as String, hintValue as String)
  Dim vEnum
  Dim vVal
  Dim s1$, s2$
  Dim sFieldName$, sFieldValue$, sInstanceName$, sHint$, sContent$
  
  vEnum = thisComponent.getTextFields().createEnumeration()
  If Not IsNull(vEnum) Then
    Do While vEnum.hasMoreElements()
      vVal = vEnum.nextElement()
      If vVal.supportsService(&quot;com.sun.star.text.TextField.Input&quot;) Then
      		if (vVal.Hint = hintName ) then 
      			rem hint name exists 
      			rem set hint name to new value
      			vVal.Content = hintValue
      		end if 
      end If
    Loop
  End if
  ThisComponent.TextFields.refresh()
End Sub

Sub EmbedGraphic(oDoc, sURL$)
  REM Author: Stephan Wunderlich
  Dim oShape
  Dim oGraph     &apos;The graphic object is text content.
  Dim oProvider  &apos;GraphicProvider service.
  Dim oText
  Dim s$

  s = &quot;com.sun.star.drawing.GraphicObjectShape&quot;
  oShape = oDoc.createInstance(s)
  oGraph = oDoc.createInstance(&quot;com.sun.star.text.GraphicObject&quot;)

  oDoc.getDrawPage().add(oShape)

  oProvider = createUnoService(&quot;com.sun.star.graphic.GraphicProvider&quot;)

  Dim oProps(0) as new com.sun.star.beans.PropertyValue
  oProps(0).Name  = &quot;URL&quot;
  oProps(0).Value = sURL

  oShape.Graphic = oProvider.queryGraphic(oProps())
  oGraph.graphicurl = oShape.graphicurl
  oGraph.Width = 350 * 15
  oGraph.Height = 71 * 15
  oText= oDoc.getText()

  &apos; Insert at the current cursor location
  Dim oVC : oVC = oDoc.getCurrentController().getViewCursor()
  oText.insertTextContent(oVC, oGraph, false)

  &apos; We no longer require the shape object.
  oDoc.getDrawPage().remove(oShape)
End Sub

Sub SetDocumentProperty (propertyName as string, propertyValue as string)
       XRay thisComponent.DocumentInfo
	if (Not thisComponent.DocumentInfo.getPropertySetInfo().hasPropertyByName(propertyName) ) then
		thisComponent.Documentinfo.AddProperty(propertyName , 0, propertyValue)
	else
		Msgbox thisComponent.DocumentInfo.getPropertyValue(propertyName)
	end if
End Sub

Sub AddImageIntoSection(sectionName$, sURL$)
  Dim oShape
  Dim oGraph     &apos;The graphic object is text content.
  Dim oProvider  &apos;GraphicProvider service.
  Dim oText
  Dim s$
  Dim oDoc 
  Dim sName as string
  sName = sectionName 
  oDoc = ThisComponent

  sURL = ConvertToURL(sURL)
  
  s = &quot;com.sun.star.drawing.GraphicObjectShape&quot;
  oShape = oDoc.createInstance(s)
  oGraph = oDoc.createInstance(&quot;com.sun.star.text.GraphicObject&quot;)

  oDoc.getDrawPage().add(oShape)

  oProvider = createUnoService(&quot;com.sun.star.graphic.GraphicProvider&quot;)

  Dim oProps(0) as new com.sun.star.beans.PropertyValue
  oProps(0).Name  = &quot;URL&quot;
  oProps(0).Value = sURL

  oShape.Graphic = oProvider.queryGraphic(oProps())
  oGraph.graphicurl = oShape.graphicurl
  oGraph.Width = 350 * 15
  oGraph.Height = 71 * 15
  
  rem now iterate through the section 
  Dim oSect
  If ThisComponent.getTextSections().hasByName(sName) Then
  	  oSect = ThisComponent.getTextSections().getByName(sName)
       rem XRay oSect
  	    Dim sectionText , sectionCurs
    	sectionCurs = ThisComponent.getText().createTextCursor()
        sectionCurs.gotoRange(oSect.getAnchor(), false)
        Dim endRange, endCursor
        endRange = sectionCurs.getEnd()
      
        endCursor = endRange.getText().createTextCursorByRange(endRange.getStart())
        endCursor.getText().insertTextContent( endCursor, oGraph, False)
        
  End If
        
        
  rem oText= oDoc.getText()

  &apos; Insert at the current cursor location
  rem Dim oVC : oVC = oDoc.getCurrentController().getViewCursor()
  rem oText.insertTextContent(oVC, oGraph, false)

  &apos; We no longer require the shape object.
  oDoc.getDrawPage().remove(oShape)
End Sub

Sub InsertString( oCursor, cString , cStyle)
    Dim oText
   oText = oCursor.getText()
   oCursor.ParaStyleName = cStyle
   oText.insertString( oCursor, cString, True )

End Sub

Dim globalWeight as Single 

Sub InsertWeightedString(oCursor, cString, cStyle, cCharWeight) 
   Dim oText
   oText = oCursor.getText()
   oCursor.ParaStyleName = cStyle
   oCursor.CharWeight = cCharWeight
   oText.insertString( oCursor, cString, True )

End Sub

Sub InsertLineBreak( oCursor )
	Dim oText
   oText = oCursor.getText()
   oText.insertControlCharacter( oCursor, com.sun.star.text.ControlCharacter.LINE_BREAK, False )
End Sub

Sub InsertParaBreak( oCursor )
    Dim oText
   oText = oCursor.getText()
   oText.insertControlCharacter( oCursor, com.sun.star.text.ControlCharacter.PARAGRAPH_BREAK, False )
End Sub

Sub InsertPageBreak( oCursor )
   Dim oText
   oText = oCursor.getText()
   oText.insertControlCharacter( oCursor, com.sun.star.text.ControlCharacter.PARAGRAPH_BREAK, False )
   oCursor.BreakType = com.sun.star.style.BreakType.PAGE_BEFORE
End Sub 

Sub SetParagraphStyle
  Dim oSels As Object, oSel As Object, oText As Object
  Dim lSelCount As Long, lWhichSelection As Long
  Dim oLCurs As Object, oRCurs As Object
  
  oText = ThisComponent.Text
  oSels = ThisComponent.getCurrentSelection()
  lSelCount = oSels.getCount()
  For lWhichSelection = 0 To lSelCount - 1
    oSel = oSels.getByIndex(lWhichSelection)
    oSel.ParaStyleName = &quot;Heading 2&quot;
  Next
End Sub

Sub SearchAndReplace (searchFor as string, replaceWith as string)
	Dim oReplace
  	oReplace = ThisComponent.createReplaceDescriptor() 
  	oReplace.SearchCaseSensitive = True 
  	oReplace.SearchString = searchFor
    oReplace.ReplaceString = replaceWith 
    ThisComponent.ReplaceAll(oReplace)
End Sub


Sub SearchAndReplaceWithAttributes (searchFor as string, replaceWith as string, attrNames() as String, attrValues() as com.sun.star.xml.AttributeData)
	Dim oReplace
  	oReplace = ThisComponent.createReplaceDescriptor() 
  	oReplace.SearchCaseSensitive = True 
  	oReplace.SearchString = searchFor
    oReplace.ReplaceString = replaceWith 
    ThisComponent.ReplaceAll(oReplace)
    Dim viewCursor 
    viewCursor = ThisComponent.getCurrentController().getViewCursor()
    viewCursor.gotoStartofLine(true)
    viewCursor.TextUserDefinedAttributes = AddAttributesToContainer (viewCursor.TextUserDefinedAttributes, attrNames, attrValues)
    viewCursor.HyperLinkURL = &quot;URL: &quot;+ attrValues(0).Value + &quot; ; &quot; + attrValues(1).Value
    viewCursor.HyperLinkTarget =  &quot;URL: &quot;+ attrValues(0).Value + &quot; ; &quot; + attrValues(1).Value
    viewCursor.gotoEndofLine(false)
End Sub


Function MakePropertyValue( Optional cName As String, Optional uValue ) As com.sun.star.beans.PropertyValue
   Dim oPropertyValue As New com.sun.star.beans.PropertyValue
   If Not IsMissing( cName ) Then
      oPropertyValue.Name = cName
   EndIf
   If Not IsMissing( uValue ) Then
      oPropertyValue.Value = uValue
   EndIf
   MakePropertyValue() = oPropertyValue
End Function 



Function GetAttributeValue(AttributeContainer As com.sun.star.xml.AttributeContainer, AttributeName As String) As String
  Dim Attribute As Object

  GetAttributeValue = &quot;&quot;

  If AttributeContainer.hasByName(AttributeName) Then
    Attribute = AttributeContainer.getByName(AttributeName)
    GetAttributeValue = Attribute.Value
  End If
End Function

Function AddAttributesToContainer (AttributeContainer As com.sun.star.xml.AttributeContainer, _
 ArrNames() as String, Attributes() As com.sun.star.xml.AttributeData)
 
 Dim i as Integer

 
 For i = LBound(Attributes()) to UBound(Attributes()) 
 	if (AttributeContainer.hasByName (ArrNames(i)) ) then 
 		AttributeContainer.removeByName (ArrNames(i))
 		AttributeContainer.insertByName (ArrNames(i), Attributes(i))
 	else
 		AttributeContainer.insertByName (ArrNames(i), Attributes(i))
    end if 
    
 Next
 
 AddAttributesToContainer = AttributeContainer 
 
End Function
 
Function AddAttribute(AttributeContainer As com.sun.star.xml.AttributeContainer, _
 AttributeName As String, AttributeValue As String)
  Dim oMyAttribute, oMyAttribute2 As Object

  oMyAttribute = createUnoStruct(&quot;com.sun.star.xml.AttributeData&quot;)
  oMyAttribute2 = createUnoStruct(&quot;com.sun.star.xml.AttributeData&quot;)
  With oMyAttribute
    .Namespace = &quot;&quot;
    .Type = &quot;CDATA&quot;
    .Value = AttributeValue
  End With
  With oMyAttribute2
    .Namespace = &quot;&quot;
    .Type = &quot;CDATA&quot;
    .Value = CStr(Now)
  End With
    
  

  If AttributeContainer.hasByName(AttributeName) Then
    AttributeContainer.removeByName(AttributeName, oMyAttribute)
    AttributeContainer.insertByName(AttributeName, oMyAttribute)
    AttributeContainer.insertByName(&quot;docu-date&quot;, oMyAttribute2)
  
  Else
  
    AttributeContainer.insertByName(AttributeName, oMyAttribute)
      AttributeContainer.insertByName(&quot;docu-date&quot;, oMyAttribute2)
  
  End If

  AddAttribute = AttributeContainer
End Function
</script:module>