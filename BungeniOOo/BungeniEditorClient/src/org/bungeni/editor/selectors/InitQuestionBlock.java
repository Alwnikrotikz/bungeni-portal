/*
 * InitQuestionBlock.java
 *
 * Created on August 31, 2007, 4:01 PM
 */

package org.bungeni.editor.selectors;

import java.util.HashMap;
import java.util.Set;
import java.util.Vector;
import javax.swing.JDialog;
import org.bungeni.db.BungeniClientDB;
import org.bungeni.db.BungeniRegistryFactory;
import org.bungeni.db.GeneralQueryFactory;
import org.bungeni.db.QueryResults;
import org.bungeni.db.registryQueryDialog;
import org.bungeni.editor.actions.toolbarAction;
import org.bungeni.ooo.OOComponentHelper;
import org.bungeni.utils.MessageBox;

/**
 *
 * @author  Administrator
 */
public class InitQuestionBlock extends javax.swing.JPanel implements IDialogSelector {
    private OOComponentHelper ooDocument;
    private JDialog parent;
    private BungeniClientDB dbInstance=null;
    private toolbarAction theAction;
    registryQueryDialog rqs;
    private SelectorDialogModes theMode;
    private static org.apache.log4j.Logger log = org.apache.log4j.Logger.getLogger(InitQuestionBlock.class.getName());
 
    HashMap<String, String> selectionData = new HashMap<String,String>();
    /** Creates new form InitQuestionBlock */
    public InitQuestionBlock() {
        initComponents();
    }
    public InitQuestionBlock(OOComponentHelper ooDocument, JDialog parentDlg, toolbarAction theAction) {
        initComponents();
        this.ooDocument = ooDocument;
        this.parent = parentDlg;
        this.theAction = theAction;
        txtAddressedTo.setEditable(false);
        txtPersonName.setEditable(true);
        txtQuestionText.setEditable(false);
        txtQuestionTitle.setEditable(false);
        HashMap<String,String> registryMap = BungeniRegistryFactory.fullConnectionString();  
        dbInstance = new BungeniClientDB(registryMap);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jScrollPane1 = new javax.swing.JScrollPane();
        txtQuestionText = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        btnSelectQuestion = new javax.swing.JButton();
        txtQuestionTitle = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        txtPersonName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        btnQuestionApply = new javax.swing.JButton();
        btnQuestionCancel = new javax.swing.JButton();
        txtAddressedTo = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();

        txtQuestionText.setColumns(20);
        txtQuestionText.setFont(new java.awt.Font("Tahoma", 0, 10));
        txtQuestionText.setLineWrap(true);
        txtQuestionText.setRows(5);
        jScrollPane1.setViewportView(txtQuestionText);

        jLabel2.setText("Question Text");

        btnSelectQuestion.setText("Select a Question...");
        btnSelectQuestion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelectQuestionActionPerformed(evt);
            }
        });

        jLabel1.setText("Question Title ");

        jLabel3.setText("Edit name of Person asking Question");

        btnQuestionApply.setText("Apply");
        btnQuestionApply.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQuestionApplyActionPerformed(evt);
            }
        });

        btnQuestionCancel.setText("Cancel");

        jLabel4.setText("Question Addressed To :");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(txtQuestionTitle, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 279, Short.MAX_VALUE)
                    .add(jLabel1)
                    .add(jLabel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 264, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(txtPersonName, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 279, Short.MAX_VALUE)
                    .add(layout.createSequentialGroup()
                        .add(btnQuestionApply, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 117, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 43, Short.MAX_VALUE)
                        .add(btnQuestionCancel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 119, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 279, Short.MAX_VALUE)
                    .add(jLabel2)
                    .add(txtAddressedTo, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 279, Short.MAX_VALUE)
                    .add(jLabel4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 265, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(btnSelectQuestion))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(btnSelectQuestion)
                .add(7, 7, 7)
                .add(jLabel1)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(txtQuestionTitle, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLabel3)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(txtPersonName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLabel4)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(txtAddressedTo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLabel2)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 104, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(btnQuestionApply)
                    .add(btnQuestionCancel))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnQuestionApplyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQuestionApplyActionPerformed
// TODO add your handling code here:
       
    }//GEN-LAST:event_btnQuestionApplyActionPerformed

    private void btnSelectQuestionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelectQuestionActionPerformed
// TODO add your handling code here:
        rqs = new registryQueryDialog("Select A Question", "Select * from questions", parent);
        rqs.show();
        log.debug("Moved on before closing child dialog");
        selectionData = rqs.getData();
        if (selectionData.size() > 0 ) {
            Set keyset = selectionData.keySet();
            log.debug("selected keyset size = " + keyset.size());
            txtQuestionTitle.setText(selectionData.get("QUESTION_TITLE"));
            txtAddressedTo.setText(selectionData.get("QUESTION_TO"));
            //resolve person name URI to registry entry
            dbInstance.Connect();
            QueryResults rs = dbInstance.QueryResults(GeneralQueryFactory.Q_FETCH_PERSON_BY_URI(selectionData.get("QUESTION_FROM")));
            dbInstance.EndConnect();
            String fullName = "";
            if (rs.hasResults()) {
                
                String[] firstName = rs.getSingleColumnResult("FIRST_NAME");
                String[] lastName = rs.getSingleColumnResult("LAST_NAME");
                if (firstName != null )
                    fullName = firstName[0];
                if (lastName != null ) 
                    fullName += " " + lastName[0];
                
            }
            txtPersonName.setText(fullName);
            
            //
            txtQuestionText.setText(selectionData.get("QUESTON_TEXT"));
            fillDocument();
        } else {
            log.debug("selected keyset empty");
        }
    }//GEN-LAST:event_btnSelectQuestionActionPerformed

    private void fillDocument(){
           //check if section exists
           //if already exists, bail out with error message
           //else
           //create section with appropriate name
           //set section metadata
           //fill up respetive information on the document.
           String newSectionName = "";
           //must check for action type too, but for testing purposes ignored...
           newSectionName = theAction.action_naming_convention()+"-"+selectionData.get("ID");
           if (ooDocument.getTextSections().hasByName(newSectionName)) {
               MessageBox.OK("There is Question : " + selectionData.get("ID")+" has already been imported into the document!" );
               return;
           }
           //now create section
          ooDocument.addViewSection(newSectionName); 
        
    }
    public void setDialogMode(SelectorDialogModes mode) {
        theMode = mode;
    }

    public SelectorDialogModes getDialogMode() {
        return theMode;
    }

    public void setOOComponentHelper(OOComponentHelper ooComp) {
    }

    public void setToolbarAction(toolbarAction action) {
    }

    public void setParentDialog(JDialog dlg) {
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnQuestionApply;
    private javax.swing.JButton btnQuestionCancel;
    private javax.swing.JButton btnSelectQuestion;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtAddressedTo;
    private javax.swing.JTextField txtPersonName;
    private javax.swing.JTextArea txtQuestionText;
    private javax.swing.JTextField txtQuestionTitle;
    // End of variables declaration//GEN-END:variables
    
}
