bungeni.ui.viewlets: question
=============================

Imports
-------

  >>> from sqlalchemy import create_engine
  >>> from ore.alchemist.interfaces import IDatabaseEngine
  >>> from ore.alchemist import Session
  >>> from bungeni import core as model

Database connection setup
-------------------------

  >>> db = create_engine('postgres://localhost/bungeni-test', echo=False)
  >>> component.provideUtility( db, IDatabaseEngine, 'bungeni-db' )
  >>> model.metadata.bind = db   
  >>> model.metadata.create_all() 
  >>> session = Session()

Functional test setup
---------------------

  >>> from bungeni.core.app import BungeniApp
  >>> app = BungeniApp()

  >>> from zope.publisher.browser import TestRequest
  >>> request = TestRequest()
  
Workspace viewlets
------------------

  >>> from random import randint

Add a question.

  >>> question = model.Question()
  >>> question.subject = u"Example question"
  >>> question.__parent__ = app
  >>> question.__name__ = "question-1"
  >>> question.question_id = randint(1, 1000000)

Save and commit transaction.

  >>> session.save(question)
  >>> session.flush()
  >>> transaction.commit()
  
  >>> from zope.lifecycleevent import ObjectCreatedEvent
  >>> from zope.event import notify

Fire question create event.

  >>> notify(ObjectCreatedEvent(question))

  >>> session.flush()
  >>> transaction.commit()

Sleep.
  
  >>> time.sleep(1.1)

Now we verify that the object has indeed been committed. This test
currently fails.
  
  >>> from ore.alchemist import container, Session
  >>> session = Session()
  >>> from zope.dottedname import resolve
  >>> domain_class = resolve.resolve('bungeni.core.domain.Question')
  >>> value_key = container.valueKey('obj-%d' %  question.question_id)
  >>> q2 = session.query( domain_class ).get( value_key )
  >>> q2.status is not None
  True
  
Verify that the question is in state 'draft' (automatically
transitioned).

  >>> from bungeni.core.workflows.question import states
  >>> question.status == states.draft
  True
  
  >>> time.sleep(1.1)

  >>> from ore.xapian.interfaces import IIndexSearch
  >>> searcher = component.getUtility(IIndexSearch)()
  >>> searcher.reopen()
  >>> query = searcher.query_field('status', states.draft)
  >>> list(searcher.search(query, 0, 30))
  
The questions listing viewlet displays questions in a particular
workflow state.
  
  >>> from bungeni.ui.viewlets.question import QuestionsInParticularStateViewlet
  
  >>> viewlet = QuestionsInParticularStateViewlet()
  >>> viewlet.context = app; viewlet.request = request

Draft state:

  >>> viewlet.state = states.draft; viewlet.update()
  >>> viewlet.results

Cleanup:

  >>> from zope.app.container.contained import ObjectRemovedEvent
  >>> notify(ObjectRemovedEvent(question))

  >>> time.sleep(1.0)
